package org.usfirst.frc.team5340.robot;

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;




import org.usfirst.frc.team5340.robot.commands.BeltBack;
//import org.usfirst.frc.team5340.robot.commands.BallDown;
//import org.usfirst.frc.team5340.robot.commands.BallIn;
//import org.usfirst.frc.team5340.robot.commands.BallOut;
//import org.usfirst.frc.team5340.robot.commands.BallUp;
//import org.usfirst.frc.team5340.robot.commands.BeltBack;
import org.usfirst.frc.team5340.robot.commands.BeltDown;
import org.usfirst.frc.team5340.robot.commands.BeltForward;
//import org.usfirst.frc.team5340.robot.commands.BeltForward;
import org.usfirst.frc.team5340.robot.commands.BeltUp;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);
    
    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.
    
    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:
    
    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());
    
    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());
    
    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());
	
	public Joystick xboxController1 = new Joystick(0);
	//public Joystick xboxController2 = new Joystick(5);
	
	public OI(){
//		JoystickButton ballUp = new JoystickButton(xboxController1, 3);
	    JoystickButton beltFwd = new JoystickButton(xboxController1, 2);
		JoystickButton beltBck = new JoystickButton(xboxController1, 1);
//		JoystickButton ballOut = new JoystickButton(xboxController1, 4);
		JoystickButton beltUp = new JoystickButton(xboxController1, 5);
		JoystickButton beltDown = new JoystickButton(xboxController1, 6);
		
		//if(xboxController1.getRawAxis(3)>0.2) new BeltForward();
		//if(xboxController1.getRawAxis(2)>0.2) new BeltBack();
	
	beltUp.whileHeld(new BeltUp());
	beltDown.whileHeld(new BeltDown());
	beltFwd.whileHeld(new BeltForward());
	beltBck.whileHeld(new BeltBack());
//	ballUp.whileHeld(new BallUp());
//	ballDown.whileHeld(new BallDown());
//	ballIn.whileHeld(new BallIn());
//	ballOut.whileHeld(new BallOut()); 
//		
	}
}

